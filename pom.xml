<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.scijava</groupId>
		<artifactId>pom-scijava</artifactId>
		<version>29.2.1</version>
		<relativePath />
	</parent>
	<artifactId>scijava-parallel</artifactId>

	<version>0.0.1-SNAPSHOT</version>
	<name>ToDO</name>
	<description>ToDO.</description>
	<url>ToDO</url>
	<inceptionYear>2020</inceptionYear>
	<organization>
		<name>SciJava</name>
		<url>https://scijava.org/</url>
	</organization>
	<licenses>
		<license>
			<name>Simplified BSD License</name>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>kozusznikj</id>
			<name>Jan Ko≈æusznik</name>
			<url>https://www.kozusznik.cz</url>
			<roles>
				<role>founder</role>
				<role>lead</role>
				<role>developer</role>
				<role>debugger</role>
				<role>reviewer</role>
				<role>support</role>
				<role>maintainer</role>
			</roles>
		</developer>
	</developers>
	<contributors>
		<!-- NB: Need at least one element to override the parent. See: https://issues.apache.org/jira/browse/MNG-5220 -->
		<contributor>
			<name>None</name>
		</contributor>
	</contributors>
	<mailingLists>
		<mailingList>
			<name>none</name>
		</mailingList>
	</mailingLists>
	<scm>
		<url>https://code.it4i.cz/fiji/hpc-datastore.git</url>
	</scm>
	<issueManagement>
		<system>none</system>
	</issueManagement>
	<ciManagement>
		<system>none</system>
	</ciManagement>
	<!-- <mailingLists> <mailingList> <name>Image.sc Forum</name> <archive>ToDo</archive> 
		</mailingList> </mailingLists> <scm> <connection>scm:git:git://github.com/fiji-hpc/scijava-parallel</connection> 
		<developerConnection>scm:git:git@github.com:fiji-hpc/scijava-parallel</developerConnection> 
		<tag>HEAD</tag> <url>https://github.com/fiji-hpc/scijava-parallel</url> </scm> 
		<issueManagement> <system>GitHub Issues</system> <url>https://github.com/fiji-hpc/scijava-parallel</url> 
		</issueManagement> <ciManagement> <system>none</system> </ciManagement> -->
	<!-- Add usual stuff as per SciJava projects -->

	<properties>
		<package-name>ToDo</package-name>
		<license.licenseName>bsd_2</license.licenseName>
		<license.copyrightOwners>SciJava developers.</license.copyrightOwners>

		<!-- NB: Deploy releases to the SciJava Maven repository. -->
		<releaseProfiles>deploy-to-scijava</releaseProfiles>
		<quarkus.version>1.7.0.Final</quarkus.version>
		<cdi-api.version>2.0.SP1</cdi-api.version>
		<helidon.microprofile.version>1.4.7</helidon.microprofile.version>
		<helidon-integrations.version>1.3.1</helidon-integrations.version>
		<persistence-api.version>3.0.0</persistence-api.version>
		<hibernate.version>5.4.25.Final</hibernate.version>
		<derby.version>10.14.2.0</derby.version>
		<deltaspike.version>1.9.4</deltaspike.version>
		
		<project.stage>development</project.stage>
		<org.apache.deltaspike.ProjectStage>Development</org.apache.deltaspike.ProjectStage>
		
	</properties>

	<repositories>
		<repository>
			<id>it4i</id>
			<url>https://artifactory.cs.vsb.cz/it4i/</url>
		</repository>
		<repository>
			<id>scijava.public</id>
			<url>https://maven.scijava.org/content/groups/public</url>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>it4i</id>
			<url>https://artifactory.cs.vsb.cz/it4i/</url>
		</repository>
	</distributionManagement>
	<profiles>
		<profile>
				<!-- The default profile skips all tests, though you can tune it to run 
					just unit tests based on a custom pattern -->
				<!-- Seperate profiles are provided for running all tests, including Arquillian 
					tests that execute in the specified container -->
				<id>default</id>
				<activation>
					<activeByDefault>true</activeByDefault>
				</activation>
				<properties>
					<project.stage>development</project.stage>
					<org.apache.deltaspike.ProjectStage>Development</org.apache.deltaspike.ProjectStage>
				</properties>
				
			</profile>
		<profile>
			<id>develop</id>
			<properties>
				<project.stage>development</project.stage>
				<org.apache.deltaspike.ProjectStage>Development</org.apache.deltaspike.ProjectStage>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<id>enforce-rules</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<skip>true</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.12</version>
			<scope>provided</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.janelia.saalfeldlab/n5 -->
		<dependency>
			<groupId>org.janelia.saalfeldlab</groupId>
			<artifactId>n5</artifactId>
		</dependency>
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej-common</artifactId>
		</dependency>

		<dependency>
			<groupId>sc.fiji</groupId>
			<artifactId>spim_data</artifactId>
		</dependency>
		<dependency>
			<groupId>sc.fiji</groupId>
			<artifactId>bigdataviewer-core</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api -->
		<dependency>
		    <groupId>jakarta.persistence</groupId>
		    <artifactId>jakarta.persistence-api</artifactId>
		    <version>${persistence-api.version}</version>
		</dependency>
		
		<dependency>
	        <groupId>org.hibernate</groupId>
	        <artifactId>hibernate-core</artifactId>
	        <version>${hibernate.version}</version>
	        <exclusions>
	           <exclusion>
	              <groupId>javax.persistence</groupId>
	              <artifactId>javax.persistence-api</artifactId>
	           </exclusion>
	        </exclusions>
	     </dependency>
	     <dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-entitymanager</artifactId>
		    <version>${hibernate.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.derby/derby -->
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>${derby.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.helidon.microprofile.bundles/helidon-microprofile-3.0 -->
		<dependency>
			<groupId>io.helidon.microprofile.bundles</groupId>
			<artifactId>helidon-microprofile-3.1</artifactId>
			<version>${helidon.microprofile.version}</version>
			<exclusions>
				<exclusion>
          			<groupId>javax.annotation</groupId>
    				<artifactId>javax.annotation-api</artifactId>
        		</exclusion>
        		<exclusion>
					<groupId>javax.inject</groupId>
  					<artifactId>javax.inject</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	

		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-binding</artifactId>
			<version>2.32</version>
			<exclusions>
				<exclusion>
					<groupId>org.glassfish</groupId>
					<artifactId>jakarta.json</artifactId>
				</exclusion>
				<exclusion>
					<groupId>jakarta.json</groupId>
					<artifactId>jakarta.json-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jboss.spec.javax.el</groupId>
					<artifactId>jboss-el-api_3.0_spec</artifactId>
				</exclusion>
				<exclusion>
					<groupId>jakarta.annotation</groupId>
    				<artifactId>jakarta.annotation-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
		    <groupId>io.helidon.integrations.cdi</groupId>
		    <artifactId>helidon-integrations-cdi-jpa</artifactId>
		    <!-- https://mvnrepository.com/artifact/io.helidon.integrations.cdi/helidon-integrations-cdi-jpa -->
			<version>${helidon-integrations.version}</version>
    	    <scope>runtime</scope>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.helidon.integrations.cdi/helidon-integrations-cdi-hibernate -->
		<dependency>
		    <groupId>io.helidon.integrations.cdi</groupId>
		    <artifactId>helidon-integrations-cdi-hibernate</artifactId>
		    <version>${helidon-integrations.version}</version>
		    <scope>runtime</scope>
		</dependency>
				
		
		<dependency>
		    <groupId>io.helidon.integrations.cdi</groupId>
		    <artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>
		    <version>${helidon-integrations.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>io.helidon.integrations.cdi</groupId>
		    <artifactId>helidon-integrations-cdi-jta-weld</artifactId>
		    <version>${helidon-integrations.version}</version>
		    <scope>runtime</scope>
		</dependency>
	
		<!-- https://mvnrepository.com/artifact/javax.enterprise/cdi-api -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<exclusions>
				<exclusion>
					<groupId>javax.el</groupId>
    				<artifactId>javax.el-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.interceptor</groupId>
    				<artifactId>javax.interceptor-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.inject</groupId>
  					<artifactId>javax.inject</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		

		
		<dependency>
		    <groupId>org.apache.deltaspike.core</groupId>
		    <artifactId>deltaspike-core-api</artifactId>
		    <version>${deltaspike.version}</version>
		    <scope>compile</scope>
		</dependency>
		<dependency>
		    <groupId>org.apache.deltaspike.core</groupId>
		    <artifactId>deltaspike-core-impl</artifactId>
		    <version>${deltaspike.version}</version>
		    <scope>runtime</scope>
		</dependency>
		<dependency>
		    <groupId>org.apache.deltaspike.modules</groupId>
		    <artifactId>deltaspike-data-module-api</artifactId>
		    <version>${deltaspike.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.deltaspike.modules</groupId>
		    <artifactId>deltaspike-data-module-impl</artifactId>
		    <version>${deltaspike.version}</version>
		</dependency>

	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources-${project.stage}</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>
	


</project>
